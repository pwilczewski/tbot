generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model basedQuestions {
  created_at       DateTime? @db.Timestamptz(6)
  question         String?
  questionCategory String?
  id               BigInt    @id @default(autoincrement())
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model userStatus {
  created_at DateTime @default(now()) @db.Timestamptz(6)
  userName   String?
  isOwner    Boolean?
  status     String?
  botId      String?
  questionId BigInt?
  id         BigInt   @id @default(autoincrement())
  question   String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  created_at DateTime @default(now()) @db.Timestamptz(6)
  userName   String?
  telegramId BigInt?
  id         BigInt   @id @default(autoincrement())
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model answers {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  botId      BigInt?
  answer     String?
  questionId BigInt?
  question   String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bots {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  token      String?
  owner      String?
}

model documents {
  id        Int                    @id @default(autoincrement())
  body      String
  embedding Unsupported("vector")?
  botId     BigInt?
}
