generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model basedQuestions {
  created_at    DateTime? @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamptz(6)
  question      String?
  questionLevel Int
  id            Int       @id @default(autoincrement())
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model userStatus {
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  userName      String?
  isOwner       Boolean?
  status        String?
  botId         String?
  questionId    Int?
  id            BigInt   @id @default(autoincrement())
  question      String?
  questionLevel Int?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  created_at DateTime @default(now()) @db.Timestamptz(6)
  userName   String?
  telegramId BigInt?
  id         BigInt   @id @default(autoincrement())
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model answers {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  botId      Int?
  answer     String?
  questionId Int?
  question   String?
  skipped    Boolean?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bots {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  token      String?
  owner      String?
  name       String?
}

model documents {
  id         BigInt                 @id @default(autoincrement())
  content    String
  embedding  Unsupported("vector")?
  botId      Int?
  questionId Int?
  metadata   Json?
}
